cmake_minimum_required(VERSION 3.16)

project(VulkanCompute)
add_executable(VulkanCompute "main.cpp" "vkhelpers.cpp")
set_property(TARGET VulkanCompute PROPERTY CXX_STANDARD 20)
set(VKFFT_BACKEND 0 CACHE STRING "0 - Vulkan, 1 - CUDA, 2 - HIP, 3 - OpenCL, 4 - Level Zero, 5 - Metal")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_CONFIGURATION_TYPES "Release" CACHE STRING "" FORCE)
    set(CMAKE_BUILD_TYPE "Release" CACHE STRING "" FORCE)
endif()

add_definitions(-DVKFFT_BACKEND=${VKFFT_BACKEND})
target_compile_definitions(VulkanCompute PUBLIC -DVK_API_VERSION=13)

find_package(Vulkan REQUIRED)
find_package(glslang REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
find_package(VulkanMemoryAllocator CONFIG REQUIRED)
#target_include_directories(VulkanCompute PUBLIC /usr/include/glslang/Include)
add_library(VkFFT INTERFACE)
target_include_directories(VkFFT INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/vkFFT/ /usr/include/glslang/Include)
target_link_libraries(VkFFT INTERFACE glslang::MachineIndependent glslang::OSDependent glslang::GenericCodeGen glslang::SPIRV)
target_compile_definitions(VkFFT INTERFACE -DVKFFT_BACKEND=${VKFFT_BACKEND} -DVKFFT_MAX_FFT_DIMENSIONS=3)

target_precompile_headers(VulkanCompute PRIVATE "hack.hpp")
target_link_libraries(VulkanCompute PRIVATE SPIRV glslang Vulkan::Vulkan GPUOpen::VulkanMemoryAllocator VkFFT)
install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/vkFFT/" DESTINATION include)
install(TARGETS ${PROJECT_NAME} DESTINATION bin)
